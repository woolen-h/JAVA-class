package net.bbs;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import net.sungjuk.SungjukDTO;
import net.utility.DBClose;
import net.utility.DBOpen;

public class BbsDAO { //Data Access Object 데이터베이스 관련 작업
	private DBOpen dbopen=null;
	private Connection con=null;
	private PreparedStatement pstmt=null;
	private ResultSet rs=null;
	private StringBuilder sql=null;
	
	public BbsDAO() {
		dbopen=new DBOpen();
	}//end
	
	public int create(BbsDTO dto) {
		int cnt=0;
		try {
			con=dbopen.getConnection();
			
			sql=new StringBuilder();
			sql.append("insert into tb_bbs(bbsno, wname, subject, content, passwd, ip, grpno) ");
			sql.append("values(bbs_seq.nextval, ?, ?, ?, ?, ?, (select nvl(max(bbsno), 0) + 1 from tb_bbs)) ");
			
			pstmt=con.prepareStatement(sql.toString());
			pstmt.setString(1, dto.getWname());
			pstmt.setString(2, dto.getSubject());
			pstmt.setString(3, dto.getContent());
			pstmt.setString(4, dto.getPasswd());
			pstmt.setString(5, dto.getIp());
			
			cnt=pstmt.executeUpdate();
			
		}catch (Exception e) {
			System.out.println("입력 실패 : "+e);
		}finally {
			DBClose.close(con, pstmt);
		}//end
		return cnt;
	}//create
	
	public ArrayList<BbsDTO> list() {
		//데이터베이스의 데이터(rs)를 모아(ArrayList) sungjukList.jsp 전달
		ArrayList<BbsDTO> list=null;
		try {
			con=dbopen.getConnection();
			sql=new StringBuilder();
			sql.append("SELECT bbsno, wname, subject, readcnt, regdt, indent ");
			sql.append("FROM tb_bbs ");
			sql.append("ORDER BY grpno desc, ansnum asc ");
			
			pstmt=con.prepareStatement(sql.toString());
			
			
			rs = pstmt.executeQuery();
			if(rs.next()) {
				list=new ArrayList<>();
				do {
					//커서 한줄 저장
					BbsDTO dto=new BbsDTO();
					dto.setBbsno(rs.getInt("bbsno"));
					dto.setWname(rs.getString("wname"));
					dto.setSubject(rs.getString("subject"));
					dto.setReadcnt(rs.getInt("readcnt"));
					dto.setRegdt(rs.getString("regdt"));
					dto.setIndent(rs.getInt("indent"));
					list.add(dto);
			
				} while (rs.next());
			}else {
				list=null;
			}//if end
		}catch (Exception e) {
			System.out.println("목록 실패 : "+e);
		}finally {
			DBClose.close(con,pstmt,rs);
		}//end
		return list;
	}//list() end
	
	
	public int count() {
		//글 갯수 확인
		int cnt=0;
		try {
			con=dbopen.getConnection();
			sql=new StringBuilder();
			sql.append("SELECT count(*) as cnt ");
			sql.append("FROM tb_bbs ");
			
			pstmt=con.prepareStatement(sql.toString());
			rs = pstmt.executeQuery();
			if(rs.next()) {
				cnt=rs.getInt("cnt");
			}//if

		}catch (Exception e) {
			System.out.println("글 갯수 출력 실패 : "+e);
		}finally {
			DBClose.close(con,pstmt,rs);
		}//end
		return cnt;
	}//count() end

	public BbsDTO read(int bbsno) {
		BbsDTO dto=null;
		//글 상세보기
		try {
			con=dbopen.getConnection();
			sql=new StringBuilder();
			sql.append("SELECT bbsno, wname, subject, content, readcnt, regdt, ip, grpno, indent, ansnum ");
			sql.append("from tb_bbs ");
			sql.append("where bbsno=? ");
			pstmt=con.prepareStatement(sql.toString());
			pstmt.setInt(1, bbsno);
			rs=pstmt.executeQuery();
			if (rs.next()) {
				BbsDTO dto=new BbsDTO();
				dto.setBbsno(rs.getInt("bbsno"));
				dto.setWname(rs.getString("wname"));
				dto.setSubject(rs.getString("subject"));
				dto.setSubject(rs.getString("content"));
				dto.setReadcnt(rs.getInt("readcnt"));
				dto.setRegdt(rs.getString("regdt"));
				dto.setIp(rs.getString("ip"));
				dto.setGrpno(rs.getInt("grpno"));
				dto.setIndent(rs.getInt("indent"));
				dto.setAnsnum(rs.getInt("ansnum"));
			}
		}catch (Exception e) {
			System.out.println("글 상세 보기 실패 : "+e);
		}finally {
			DBClose.close(con, pstmt, rs);
		}//end
		return dto;
	
}}
