/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.7
 * Generated at: 2023-04-12 05:26:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.sungjuk;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

public final class sungjukUpdate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>sungjukUpdate.jsp</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h3>성적 상세보기</h3>\r\n");
      out.write("<p>\r\n");
      out.write("<a href=\"sungjukForm.jsp\">[성적쓰기]</a>\r\n");
      out.write("<a href=\"sungjukList.jsp\">[성적목록]</a>\r\n");
      out.write("</p>\r\n");

int sno=Integer.parseInt(request.getParameter("sno"));

Connection con=null;
PreparedStatement pstmt=null;
ResultSet rs = null;

try{
	String url     ="jdbc:oracle:thin:@localhost:1522:xe";
	String user    ="c##w";
	String password="1234";
	String driver  ="oracle.jdbc.driver.OracleDriver";			
	Class.forName(driver);						
	con=DriverManager.getConnection(url, user, password);			
	//out.println("오라클 DB 서버 연결 성공");
//out.print(request.getParameter("sno"));
	StringBuilder sql=new StringBuilder();
	sql.append("SELECT sno, uname, kor, eng, mat, wdate, addr, aver ");
	sql.append("FROM sungjuk ");
	sql.append("where sno=? ");
	
	pstmt=con.prepareStatement(sql.toString());
	pstmt.setInt(1, sno);
	rs = pstmt.executeQuery();
	if(rs.next()){
		
      out.write("\r\n");
      out.write("			<form action=\"sungjukUpdateProc.jsp\" name=\"sungjukfrm\" id=\"sungjukfrm\" method=\"post\">\r\n");
      out.write("			<!-- 사용자에게는 필요한 값 X > hidden -->\r\n");
      out.write("			<input type=\"hidden\" name=\"sno\" value=\"");
      out.print(sno);
      out.write("\">\r\n");
      out.write("			<table>\r\n");
      out.write("			<tr>\r\n");
      out.write("			<th>이름</th>\r\n");
      out.write("			<td><input type=\"text\" value=\"");
      out.print(rs.getString("uname") );
      out.write("\" name=\"uname\" id=\"uname\" maxlength=\"50\" required=\"required\" autofocus=\"autofocus\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("			<th>국어</th>\r\n");
      out.write("			<td><input type=\"number\" value=\"");
      out.print(rs.getInt("kor") );
      out.write("\" name=\"kor\" id=\"kor\" size=\"5\" min=\"0\" max=\"100\" placeholder=\"국어점수\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("			<th>영어</th>\r\n");
      out.write("			<td><input type=\"number\" value=\"");
      out.print(rs.getInt("eng") );
      out.write("\" name=\"eng\" id=\"eng\" size=\"5\" min=\"0\" max=\"100\" placeholder=\"영어점수\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("			<th>수학</th>\r\n");
      out.write("			<td><input type=\"number\" value=\"");
      out.print(rs.getInt("mat") );
      out.write("\" name=\"mat\" id=\"mat\" size=\"5\" min=\"0\" max=\"100\" placeholder=\"수학점수\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("			<th>주소</th>\r\n");
      out.write("			<td>\r\n");
      out.write("			");
 String addr=rs.getString("addr"); 
      out.write("\r\n");
      out.write("			<select name=\"addr\" id=\"addr\">\r\n");
      out.write("			<option value=\"Seoul\"");
if(addr.equals("Seoul")) {out.print("selected");} 
      out.write(">서울</option>\r\n");
      out.write("			<option value=\"Jeju\"");
if(addr.equals("Jeju")) {out.print("selected");} 
      out.write(">제주</option>\r\n");
      out.write("			<option value=\"Suwon\"");
if(addr.equals("Suwon")) {out.print("selected");} 
      out.write(">수원</option>\r\n");
      out.write("			<option value=\"Busan\"");
if(addr.equals("Busan")) {out.print("selected");} 
      out.write(">부산</option>\r\n");
      out.write("			</select>\r\n");
      out.write("			</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("			<td colspan=\"2\" align=\"center\">\r\n");
      out.write("			<input type=\"submit\" value=\"수정\">\r\n");
      out.write("			<input type=\"reset\" value=\"취소\">\r\n");
      out.write("			</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("			</form>\r\n");
      out.write("		");

	}else{
		out.println("해당 글 없음");
	}//if end

}catch(Exception e){
	out.println("성적 수정 실패"+e);
}finally{
	try{
		if(rs!=null){rs.close();}
	}catch(Exception e){}
	try{
		if(pstmt!=null){pstmt.close();}
	}catch(Exception e){}
	try{
		if(con!=null){con.close();}
	}catch(Exception e){}
}//end

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
