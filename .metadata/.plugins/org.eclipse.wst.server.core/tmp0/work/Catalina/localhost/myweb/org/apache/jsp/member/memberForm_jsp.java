/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.7
 * Generated at: 2023-04-20 08:49:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class memberForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/member/../header.jsp", Long.valueOf(1681960294350L));
    _jspx_dependants.put("/member/../footer.jsp", Long.valueOf(1681350153695L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head profile=\"http://www.w3.org/2005/10/profile\">\r\n");
      out.write("  <title>My Web</title>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("  <link rel=\"icon\" type=\"image/png\" href=\"http://example.com/myicon.png\">\r\n");
      out.write("	<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n");
      out.write("	<link href=\"https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400;0,500;0,600;0,700;0,800;0,900;1,400;1,500;1,600;1,700;1,800;1,900&family=Song+Myung&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("  <script src=\"../js/myscript.js\" type=\"text/javascript\"></script>\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("  <!-- layout.css import -->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"../css/layout.css\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body onunload=\"killtime()\">\r\n");
      out.write("\r\n");
      out.write("<!-- 메인 카테고리 시작 -->\r\n");
      out.write("<nav class=\"navbar navbar-default\">\r\n");
      out.write("  <div class=\"container\">\r\n");
      out.write("    <div class=\"navbar-header\">\r\n");
      out.write("      <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\r\n");
      out.write("        <span class=\"icon-bar\"></span>\r\n");
      out.write("        <span class=\"icon-bar\"></span>\r\n");
      out.write("        <span class=\"icon-bar\"></span>                        \r\n");
      out.write("      </button>\r\n");
      out.write("      <a class=\"navbar-brand\" href=\"");
      out.print(request.getContextPath());
      out.write("/index.jsp\">HOME</a>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n");
      out.write("      <ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("        <li><a href=\"../bbs/bbsList.jsp\">게시판</a></li>\r\n");
      out.write("        <li><a href=\"#\">공지사항</a></li>\r\n");
      out.write("        <li><a href=\"../member/loginForm.jsp\">로그인</a></li>\r\n");
      out.write("        <li><a href=\"#\">포토갤러리</a></li>\r\n");
      out.write("        <li><a href=\"#\">메일보내기</a></li>\r\n");
      out.write("      </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</nav><!-- 메인 카테고리 끝 -->\r\n");
      out.write("\r\n");
      out.write("<!-- Content 시작 -->\r\n");
      out.write("<!-- Second Container -->\r\n");
      out.write("<div class=\"container-fluid bg-3 text-center\">    \r\n");
      out.write("  <div class=\"row\">\r\n");
      out.write("    <div class=\"col-xs-12\">\r\n");
      out.write("       \r\n");
      out.write("\r\n");
      out.write("    <style>\r\n");
      out.write("    .row{\r\n");
      out.write("    display: flex;\r\n");
      out.write("    flex-direction: column;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    }\r\n");
      out.write("    form td{\r\n");
      out.write("    color: black;\r\n");
      out.write("    }\r\n");
      out.write("    .id{\r\n");
      out.write("    color: black;\r\n");
      out.write("    }\r\n");
      out.write("    </style>\r\n");
      out.write("        <!-- 본문 시작 template.jsp -->\r\n");
      out.write("          <h3>회    원    가    입</h3>\r\n");
      out.write("          <span>* 필수입력</span>\r\n");
      out.write("          <br>\r\n");
      out.write("          <div>\r\n");
      out.write("          <form name=\"memfrm\" id=\"memfrm\" method=\"post\" action=\"memberProc.jsp\" onsubmit=\"return memberCheck()\">\r\n");
      out.write("          <table>\r\n");
      out.write("          <tr>\r\n");
      out.write("          <th>* 아이디</th>\r\n");
      out.write("          <td>\r\n");
      out.write("          	<input type=\"text\" name=\"id\" id=\"id\" class=\"id\" size=\"10\" maxlength=\"10\" readonly placeholder=\"아이디\">\r\n");
      out.write("          	<input type=\"button\" value=\"ID중복확인\" onclick=\"idCheck()\">\r\n");
      out.write("          </td>\r\n");
      out.write("          </tr>\r\n");
      out.write("          <tr>\r\n");
      out.write("          <th>* 비밀번호</th>\r\n");
      out.write("          <td>\r\n");
      out.write("          	<input type=\"text\" name=\"passwd\" id=\"passwd\" size=\"22\" maxlength=\"10\" required=\"required\" placeholder=\"비밀번호를 입력해주세요.\">\r\n");
      out.write("          </td>\r\n");
      out.write("          </tr>\r\n");
      out.write("          <tr>\r\n");
      out.write("          <th>* 비밀번호 확인</th>\r\n");
      out.write("          <td>\r\n");
      out.write("          	<input type=\"text\" name=\"repasswd\" id=\"repasswd\" size=\"22\" maxlength=\"10\" required=\"required\" placeholder=\"비밀번호를 입력해주세요.\">\r\n");
      out.write("          </td>\r\n");
      out.write("          </tr>\r\n");
      out.write("          <tr>\r\n");
      out.write("          <th>* 이름</th>\r\n");
      out.write("          <td>\r\n");
      out.write("          	<input type=\"text\" name=\"mname\" id=\"mname\" size=\"22\" maxlength=\"20\" required=\"required\" placeholder=\"이름을 입력해주세요.\">\r\n");
      out.write("          </td>\r\n");
      out.write("          </tr>\r\n");
      out.write("          <tr>\r\n");
      out.write("          <th>* 이메일</th>\r\n");
      out.write("          <td>\r\n");
      out.write("          	<input type=\"text\" name=\"email\" id=\"email\" class=\"email\" size=\"20\" maxlength=\"50\" placeholder=\"이메일을 입력해주세요.\">\r\n");
      out.write("          	<button onclick=\"emailCheck()\">이메일 중복 확인</button>\r\n");
      out.write("          </td>\r\n");
      out.write("          </tr>\r\n");
      out.write("          <tr>\r\n");
      out.write("          <th>전화번호</th>\r\n");
      out.write("          <td>\r\n");
      out.write("          	<input type=\"text\" name=\"tel\" id=\"tel\" size=\"22\" maxlength=\"14\" placeholder=\"전화번호를 입력해주세요.\">\r\n");
      out.write("          </td>\r\n");
      out.write("          </tr>\r\n");
      out.write("          <tr>\r\n");
      out.write("          <th>우편번호</th>\r\n");
      out.write("          <td>\r\n");
      out.write("          	<input type=\"text\" name=\"zipcode\" id=\"zipcode\" size=\"22\" readonly>\r\n");
      out.write("          	<input type=\"button\" id=\"zipbtn\" value=\"주소찾기\" onclick=\"DaumPostcode()\">\r\n");
      out.write("          </td>\r\n");
      out.write("          </tr>          \r\n");
      out.write("          <tr>\r\n");
      out.write("          <th>주소</th>\r\n");
      out.write("          <td>\r\n");
      out.write("          	<input type=\"text\" name=\"address1\" id=\"address1\" size=\"45\" readonly>\r\n");
      out.write("          </td>\r\n");
      out.write("          </tr>\r\n");
      out.write("          <tr>\r\n");
      out.write("          <th>나머지 주소</th>\r\n");
      out.write("          <td>\r\n");
      out.write("          	<input type=\"text\" name=\"address2\" id=\"address2\" size=\"45\">\r\n");
      out.write("          </td>\r\n");
      out.write("          </tr>\r\n");
      out.write("          <tr>  \r\n");
      out.write("		  <th>직업</th>\r\n");
      out.write("		  <td style=\"text-align: left\">\r\n");
      out.write("		        <select name=\"job\"  id=\"job\">\r\n");
      out.write("		          <option value=\"0\" selected>선택하세요.</option>\r\n");
      out.write("		          <option value=\"A01\">회사원</option>\r\n");
      out.write("		          <option value=\"A02\">IT관련직</option>\r\n");
      out.write("		          <option value=\"A03\">학생</option>\r\n");
      out.write("		          <option value=\"A04\">주부</option>\r\n");
      out.write("		          <option value=\"A05\">기타</option>\r\n");
      out.write("		        </select>\r\n");
      out.write("		  </td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("          <td colspan=\"2\">\r\n");
      out.write("          	<input type=\"submit\" value=\"회원가입\" class=\"btn btn-primary\"/>\r\n");
      out.write("          	<input type=\"reset\" value=\"취소\" class=\"btn btn-primary\"/>\r\n");
      out.write("          </td>\r\n");
      out.write("          </tr>\r\n");
      out.write("          </table>\r\n");
      out.write("          </form>\r\n");
      out.write("          <!-- 다음 우편 번호 API -->\r\n");
      out.write("          <script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("			<script>\r\n");
      out.write("		\r\n");
      out.write("				\r\n");
      out.write("			function DaumPostcode() {\r\n");
      out.write("		        new daum.Postcode({\r\n");
      out.write("		            oncomplete: function(data) {\r\n");
      out.write("		                // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n");
      out.write("\r\n");
      out.write("		                // 도로명 주소의 노출 규칙에 따라 주소를 표시한다.\r\n");
      out.write("		                // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n");
      out.write("		                var roadAddr = data.roadAddress; // 도로명 주소 변수\r\n");
      out.write("		                var extraRoadAddr = ''; // 참고 항목 변수\r\n");
      out.write("\r\n");
      out.write("		                // 법정동명이 있을 경우 추가한다. (법정리는 제외)\r\n");
      out.write("		                // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n");
      out.write("		                if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){\r\n");
      out.write("		                    extraRoadAddr += data.bname;\r\n");
      out.write("		                }\r\n");
      out.write("		                // 건물명이 있고, 공동주택일 경우 추가한다.\r\n");
      out.write("		                if(data.buildingName !== '' && data.apartment === 'Y'){\r\n");
      out.write("		                   extraRoadAddr += (extraRoadAddr !== '' ? ', ' + data.buildingName : data.buildingName);\r\n");
      out.write("		                }\r\n");
      out.write("		                // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n");
      out.write("		                if(extraRoadAddr !== ''){\r\n");
      out.write("		                    extraRoadAddr = ' (' + extraRoadAddr + ')';\r\n");
      out.write("		                }\r\n");
      out.write("\r\n");
      out.write("		                // 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("		                document.getElementById('zipcode').value = data.zonecode;\r\n");
      out.write("		                document.getElementById(\"address1\").value = roadAddr;\r\n");
      out.write("		                document.getElementById(\"address1\").value = data.jibunAddress;\r\n");
      out.write("		                \r\n");
      out.write("		                // 참고항목 문자열이 있을 경우 해당 필드에 넣는다.\r\n");
      out.write("		                if(roadAddr !== ''){\r\n");
      out.write("		                    document.getElementById(\"address2\").value = extraRoadAddr;\r\n");
      out.write("		                } else {\r\n");
      out.write("		                    document.getElementById(\"address2\").value = '';\r\n");
      out.write("		                }\r\n");
      out.write("\r\n");
      out.write("		                var guideTextBox = document.getElementById(\"guide\");\r\n");
      out.write("		                // 사용자가 '선택 안함'을 클릭한 경우, 예상 주소라는 표시를 해준다.\r\n");
      out.write("		                if(data.autoRoadAddress) {\r\n");
      out.write("		                    var expRoadAddr = data.autoRoadAddress + extraRoadAddr;\r\n");
      out.write("		                    guideTextBox.innerHTML = '(예상 도로명 주소 : ' + expRoadAddr + ')';\r\n");
      out.write("		                    guideTextBox.style.display = 'block';\r\n");
      out.write("\r\n");
      out.write("		                } else if(data.autoJibunAddress) {\r\n");
      out.write("		                    var expJibunAddr = data.autoJibunAddress;\r\n");
      out.write("		                    guideTextBox.innerHTML = '(예상 지번 주소 : ' + expJibunAddr + ')';\r\n");
      out.write("		                    guideTextBox.style.display = 'block';\r\n");
      out.write("		                } else {\r\n");
      out.write("		                    guideTextBox.innerHTML = '';\r\n");
      out.write("		                    guideTextBox.style.display = 'none';\r\n");
      out.write("		                }\r\n");
      out.write("		            }\r\n");
      out.write("		        }).open();\r\n");
      out.write("		    }\r\n");
      out.write("			</script>\r\n");
      out.write("          <!-- 다음 우편 번호 API -->\r\n");
      out.write("          \r\n");
      out.write("          \r\n");
      out.write("          \r\n");
      out.write("          \r\n");
      out.write("          </div>\r\n");
      out.write("        <!-- 본문 끝 -->\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </div><!-- col-xs-12 끝 -->\r\n");
      out.write("  </div><!-- row 끝-->\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- Footer -->\r\n");
      out.write("<footer class=\"container-fluid bg-4 text-center\">\r\n");
      out.write("    Copyright &copy; 2023 MyWeb\r\n");
      out.write("</footer>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
